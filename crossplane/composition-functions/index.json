{
    "title": "Crossplane Composition Functions",
    "description": "Create and use Crossplane Composition Functions",
    "difficulty": "Beginner",
    "time": "15minutes",
    "details": {
        "steps": [
            {
                "title": "Cluster Preparation 🚧",
                "text": "step1.md"
            },
            {
                "title": "Functions Workflow 🔄",
                "text": "step2.md"
            },
            {
                "title": "Tooling 🔧",
                "text": "step3.md"
            },
            {
                "title": "Template 📝",
                "text": "step4.md"
            },
            {
                "title": "Development Loop 🌀",
                "text": "step5.md"
            },
            {
                "title": "Basic Function 📖",
                "text": "step6.md",
                "foreground": "assets/kill_tmux.sh"
            },
            {
                "title": "Run Initial Code 🏃",
                "text": "step7/step7.md",
                "background": "step7/background.sh",
                "foreground": "assets/kill_tmux.sh"
            },
            {
                "title": "What is a Composition Function? 🤔",
                "text": "step8/step8.md",
                "background": "step8/background.sh",
                "foreground": "assets/kill_tmux.sh"
            },
            {
                "title": "Composite Resource 📦",
                "text": "step9/step9.md",
                "background": "step9/background.sh",
                "foreground": "assets/kill_tmux.sh"
            },
            {
                "title": "Desired Resources 📦",
                "text": "step10/step10.md",
                "background": "step10/background.sh",
                "foreground": "assets/kill_tmux.sh"
            },
            {
                "title": "Business Logic 🧠",
                "text": "step11/step11.md",
                "background": "step11/background.sh",
                "foreground": "assets/kill_tmux.sh"
            },
            {
                "title": "Logging 📝",
                "text": "step12/step12.md",
                "background": "step12/background.sh",
                "foreground": "assets/kill_tmux.sh"
            },
            {
                "title": "Unit Testing 🧪",
                "text": "step13/step13.md",
                "background": "step13/background.sh",
                "foreground": "assets/kill_tmux.sh"
            },
            {
                "title": "Deploy to local cluster 🚀",
                "text": "step14/step14.md",
                "background": "step14/background.sh",
                "foreground": "assets/kill_tmux.sh"
            }
        ],
        "intro": {
            "text": "intro.md",
            "foreground": "foreground.sh",
            "background": "background.sh"
        },
        "finish": {
            "text": "finish.md"
        },
        "assets": {
            "host01": [
                {
                    "file": "wait.sh",
                    "target": "/usr/local/bin/",
                    "chmod": "+x"
                },
                {
                    "file": "kill_tmux.sh",
                    "target": "/usr/local/bin/",
                    "chmod": "+x"
                },
                {
                    "file": "deploy.sh",
                    "target": "/usr/local/bin/",
                    "chmod": "+x"
                },
                {
                    "file": "start_tmux.sh",
                    "target": "/usr/local/bin/",
                    "chmod": "+x"
                },
                {
                    "file": "send_command",
                    "target": "/usr/local/bin/",
                    "chmod": "+x"
                }
            ]
        }
    },
    "environment": {
        "uilayout": "terminal",
        "showdashboard": true,
        "dashboards": [
            {
                "name": "Komoplane",
                "href": "https://[[HOST_SUBDOMAIN]]-8090-[[KATACODA_HOST]].environments.katacoda.com",
                "port": 8090
            }
        ]
    },
    "backend": {
        "imageid": "kubernetes-kubeadm-1node"
    }
}
